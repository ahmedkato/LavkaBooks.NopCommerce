@model LavkaShoppingCartModel
@using Nop.Core.Domain.Orders
@using Nop.Web.Models.Checkout
@using Nop.Web.Models.ShoppingCart;
@{
	Layout = "~/Views/Shared/_CustomColumnsTwo.cshtml";

	//title
	Html.AddTitleParts(T("PageTitle.ShoppingCart").Text);
}
<div class="page shopping-cart-page">
	@using (Html.BeginRouteForm("ShoppingCartLavkaBooks", FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
		<div class="page-title">
			<h1>@T("ShoppingCart")</h1>
		</div>
		<div class="clear">
		</div>
		<div class="page-body">
			@Html.Partial("LavkaOrderSummary", Model)
			@Html.Partial("LavkaShippingMethods", Model.ShippingMethods)
			@Html.Partial("LavkaPaymentMethods", Model.PaymentMethods)
			@Html.Partial("LavkaShippingAddress", Model.ShippingAddress)
			<div class="clear">
			</div>
			<div class="inputs">
				@Html.LabelFor(model => model.CommentText)
				<div class="input-box">
					@Html.TextAreaFor(model => model.CommentText, new { @class = "comment-text" })
				</div>
				@Html.ValidationMessageFor(model => model.CommentText)
			</div>
			<div class="clear">
			</div>
			<div class="checkout-buttons">
				<input type="submit" id="checkout" name="saveorder" value="@T("LavkaShoppingCart.Order.Button")" class="button-1 checkout-button"/>
			</div>
		</div>
 }
</div>
<script type="text/javascript">
	$(document).ready(function () {
		$('#shippingMethod').change(function () {
			refreshPayment();
		});
		refreshPayment();

		function refreshPayment() {
			var shipping = $('#shippingMethod option:selected').val();
			var payment = $('#paymentMethod');

			showAll();
			if (shipping.indexOf('Курьером Книжной Лавки') == 0
				|| shipping.indexOf('Самовывоз') == 0) {
				payment.find('option[value="Payments.CashOnDeliveryFake"]').hide();
			}
			else if (shipping.indexOf('Новая Почта') == 0
				|| shipping.indexOf('Деливери') == 0
				|| shipping.indexOf('Другие службы доставки') == 0
				|| shipping.indexOf('Доставка почтой в Россию и страны зарубежья') == 0
				|| shipping.indexOf('Международные почтовые компании') == 0) {
				payment.find('option[value="Payments.CashOnDeliveryFake"]').hide();
				payment.find('option[value="Payments.CashFake"]').hide();
			}
			else if (shipping.indexOf('Укрпочта') == 0) {
				payment.find('option[value="Payments.CashFake"]').hide();
			}
			if (!shipping.indexOf('Доставка почтой в Россию и страны зарубежья') == 0
				&& !shipping.indexOf('Международные почтовые компании') == 0) {
				payment.find('option[value="Payments.WebMoneyFake"]').hide();
			}

			if (!payment.find('option:selected').is(':visible')) {
				payment.find('option:visible').first().prop('selected', true);
			}

			function showAll() {
				payment.find('option').show();
			}
		}
	});
</script>
